server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name localhost;

    location / {
        proxy_pass http://localhost:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    ssl_certificate /etc/nginx/ssl/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/private.key; 

    # Enable strong SSL/TLS settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem; # Generate a strong DH parameters file
    ssl_ecdh_curve secp384r1; # Use a strong elliptic curve

    # Enable HSTS (HTTP Strict Transport Security) for better security
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    # Enable OCSP stapling for better security and performance
    ssl_stapling on;
    ssl_stapling_verify on;

    # SSL buffer size optimization
    ssl_buffer_size 8k;

    # Enable session resumption to improve performance
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;

    # Add additional security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
